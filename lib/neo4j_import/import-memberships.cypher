UNWIND $members AS row
// Match the existing members
MATCH (m:Member {personId: row.PERSID})
// Match the existing expeditions
MATCH (e:Expedition {expeditionId: row.EXPID, year: row.MYEAR})
// Create a LED relationship between members who are leaders and the expedition
WITH m, e, row
    FOREACH(ignoreMe IN CASE WHEN row.LEADER THEN [1] ELSE [] END |
        MERGE (m)-[l:LED]->(e)
        ON CREATE
            SET l.memberId = row.MEMBID,
                l.status = row.STATUS,
                l.deputy = row.DEPUTY,
                l.basecampOnly = row.BCONLY,
                l.notToBasecamp = row.NOTTOBC,
                l.highAltitudeSupportMember = row.SUPPORT,
                l.disabled = row.DISABLED,
                l.summitSuccess = row.MSUCCESS,
                l.successClaimed = row.MCLAIMED,
                l.successDisputed = row.MDISPUTED,
                l.solo = row.MSOLO,
                l.traverse = row.MTRAVERSE,
                l.ski = row.MSKI,
                l.parapente = row.MPARAPENTE,
                l.expeditionHightPointReached = row.MHIGHPT,
                l.o2Used = row.MO2USED,
                l.o2None = row.MO2NONE,
                l.o2Climb = row.MO2CLIMB,
                l.o2Descent = row.MO2DESCENT,
                l.o2Sleep = row.MO2SLEEP,
                l.o2Medical = row.MO2MEDICAL,
                l.death = row.DEATH,
                l.deathType = row.DEATHTYPE_DESC,
                l.deathClass = row.DEATHCLASS_DESC,
                l.deathAmsRelated = row.AMS,
                l.deathWeatherRelated = row.WEATHER,
                l.injury = row.INJURY,
                l.injuryType = row.INJURYTYPE_DESC,
                l.summitBid = row.MSMTBID_DESC,
                l.summitBidTerminationReason = row.MSMTTERM_DESC,
                l.ageDuringExpedition = CASE WHEN row.CALCAGE = "" THEN null ELSE toInteger(row.CALCAGE) END,
                l.speedAscent = CASE WHEN row.MSPEED = "" THEN null ELSE toBoolean(row.MSPEED) END,
                l.personalHightPointReached = CASE WHEN row.MPERHIGHPT = 0 THEN null ELSE row.MPERHIGHPT END,
                l.summitDate = CASE WHEN row.MSMTDATE1 = "" THEN null ELSE date(row.MSMTDATE1) END,
                l.summitTime = CASE WHEN row.MSMTTIME1 = "" THEN null ELSE time(row.MSMTTIME1) END,
                l.o2UsageNote = CASE WHEN row.M02NOTE = "" THEN null ELSE row.M02NOTE END,
                l.deathDate = CASE WHEN row.DEATHDATE = "" THEN null ELSE date(row.DEATHDATE) END,
                l.deathTime = CASE WHEN row.DEATHTIME = "" THEN null ELSE time(row.DEATHTIME) END,
                l.deathHeight = CASE WHEN row.DEATHHGTM = 0 THEN null ELSE row.DEATHHGTM END,
                l.deathNote = CASE WHEN row.DEATHNOTE = "" THEN null ELSE row.DEATHNOTE END,
                l.necrology = CASE WHEN row.NECROLOGY = "" THEN null ELSE row.NECROLOGY END,
                l.injuryDate = CASE WHEN row.INJURYDATE = "" THEN null ELSE date(row.INJURYDATE) END,
                l.injuryTime = CASE WHEN row.INJURYTIME = "" THEN null ELSE time(row.INJURYTIME) END,
                l.injuryHeight = CASE WHEN row.INJURYHGTM = 0 THEN null ELSE row.INJURYHGTM END,
                l.memo = CASE WHEN row.MEMBERMEMO = "" THEN null ELSE row.MEMBERMEMO END)
    FOREACH(ignoreMe IN CASE WHEN row.HIRED THEN [1] ELSE [] END |
        MERGE (m)-[w:WORKED_FOR]->(e)
        ON CREATE
            SET w.memberId = row.MEMBID,
                w.status = row.STATUS,
                w.deputy = row.DEPUTY,
                w.basecampOnly = row.BCONLY,
                w.notToBasecamp = row.NOTTOBC,
                w.highAltitudeSupportMember = row.SUPPORT,
                w.disabled = row.DISABLED,
                w.summitSuccess = row.MSUCCESS,
                w.successClaimed = row.MCLAIMED,
                w.successDisputed = row.MDISPUTED,
                w.solo = row.MSOLO,
                w.traverse = row.MTRAVERSE,
                w.ski = row.MSKI,
                w.parapente = row.MPARAPENTE,
                w.expeditionHightPointReached = row.MHIGHPT,
                w.o2Used = row.MO2USED,
                w.o2None = row.MO2NONE,
                w.o2Climb = row.MO2CLIMB,
                w.o2Descent = row.MO2DESCENT,
                w.o2Sleep = row.MO2SLEEP,
                w.o2Medical = row.MO2MEDICAL,
                w.death = row.DEATH,
                w.deathType = row.DEATHTYPE_DESC,
                w.deathClass = row.DEATHCLASS_DESC,
                w.deathAmsRelated = row.AMS,
                w.deathWeatherRelated = row.WEATHER,
                w.injury = row.INJURY,
                w.injuryType = row.INJURYTYPE_DESC,
                w.summitBid = row.MSMTBID_DESC,
                w.summitBidTerminationReason = row.MSMTTERM_DESC,
                w.ageDuringExpedition = CASE WHEN row.CALCAGE = "" THEN null ELSE toInteger(row.CALCAGE) END,
                w.speedAscent = CASE WHEN row.MSPEED = "" THEN null ELSE toBoolean(row.MSPEED) END,
                w.personalHightPointReached = CASE WHEN row.MPERHIGHPT = 0 THEN null ELSE row.MPERHIGHPT END,
                w.summitDate = CASE WHEN row.MSMTDATE1 = "" THEN null ELSE date(row.MSMTDATE1) END,
                w.summitTime = CASE WHEN row.MSMTTIME1 = "" THEN null ELSE time(row.MSMTTIME1) END,
                w.o2UsageNote = CASE WHEN row.M02NOTE = "" THEN null ELSE row.M02NOTE END,
                w.deathDate = CASE WHEN row.DEATHDATE = "" THEN null ELSE date(row.DEATHDATE) END,
                w.deathTime = CASE WHEN row.DEATHTIME = "" THEN null ELSE time(row.DEATHTIME) END,
                w.deathHeight = CASE WHEN row.DEATHHGTM = 0 THEN null ELSE row.DEATHHGTM END,
                w.deathNote = CASE WHEN row.DEATHNOTE = "" THEN null ELSE row.DEATHNOTE END,
                w.necrology = CASE WHEN row.NECROLOGY = "" THEN null ELSE row.NECROLOGY END,
                w.injuryDate = CASE WHEN row.INJURYDATE = "" THEN null ELSE date(row.INJURYDATE) END,
                w.injuryTime = CASE WHEN row.INJURYTIME = "" THEN null ELSE time(row.INJURYTIME) END,
                w.injuryHeight = CASE WHEN row.INJURYHGTM = 0 THEN null ELSE row.INJURYHGTM END,
                w.memo = CASE WHEN row.MEMBERMEMO = "" THEN null ELSE row.MEMBERMEMO END)
    FOREACH(ignoreMe IN CASE WHEN (NOT row.LEADER) AND (NOT row.HIRED) THEN [1] ELSE [] END |
        MERGE (m)-[j:JOINED]->(e)
        ON CREATE
            SET j.memberId = row.MEMBID,
                j.status = row.STATUS,
                j.deputy = row.DEPUTY,
                j.basecampOnly = row.BCONLY,
                j.notToBasecamp = row.NOTTOBC,
                j.highAltitudeSupportMember = row.SUPPORT,
                j.disabled = row.DISABLED,
                j.summitSuccess = row.MSUCCESS,
                j.successClaimed = row.MCLAIMED,
                j.successDisputed = row.MDISPUTED,
                j.solo = row.MSOLO,
                j.traverse = row.MTRAVERSE,
                j.ski = row.MSKI,
                j.parapente = row.MPARAPENTE,
                j.expeditionHightPointReached = row.MHIGHPT,
                j.o2Used = row.MO2USED,
                j.o2None = row.MO2NONE,
                j.o2Climb = row.MO2CLIMB,
                j.o2Descent = row.MO2DESCENT,
                j.o2Sleep = row.MO2SLEEP,
                j.o2Medical = row.MO2MEDICAL,
                j.death = row.DEATH,
                j.deathType = row.DEATHTYPE_DESC,
                j.deathClass = row.DEATHCLASS_DESC,
                j.deathAmsRelated = row.AMS,
                j.deathWeatherRelated = row.WEATHER,
                j.injury = row.INJURY,
                j.injuryType = row.INJURYTYPE_DESC,
                j.summitBid = row.MSMTBID_DESC,
                j.summitBidTerminationReason = row.MSMTTERM_DESC,
                j.ageDuringExpedition = CASE WHEN row.CALCAGE = "" THEN null ELSE toInteger(row.CALCAGE) END,
                j.speedAscent = CASE WHEN row.MSPEED = "" THEN null ELSE toBoolean(row.MSPEED) END,
                j.personalHightPointReached = CASE WHEN row.MPERHIGHPT = 0 THEN null ELSE row.MPERHIGHPT END,
                j.summitDate = CASE WHEN row.MSMTDATE1 = "" THEN null ELSE date(row.MSMTDATE1) END,
                j.summitTime = CASE WHEN row.MSMTTIME1 = "" THEN null ELSE time(row.MSMTTIME1) END,
                j.o2UsageNote = CASE WHEN row.M02NOTE = "" THEN null ELSE row.M02NOTE END,
                j.deathDate = CASE WHEN row.DEATHDATE = "" THEN null ELSE date(row.DEATHDATE) END,
                j.deathTime = CASE WHEN row.DEATHTIME = "" THEN null ELSE time(row.DEATHTIME) END,
                j.deathHeight = CASE WHEN row.DEATHHGTM = 0 THEN null ELSE row.DEATHHGTM END,
                j.deathNote = CASE WHEN row.DEATHNOTE = "" THEN null ELSE row.DEATHNOTE END,
                j.necrology = CASE WHEN row.NECROLOGY = "" THEN null ELSE row.NECROLOGY END,
                j.injuryDate = CASE WHEN row.INJURYDATE = "" THEN null ELSE date(row.INJURYDATE) END,
                j.injuryTime = CASE WHEN row.INJURYTIME = "" THEN null ELSE time(row.INJURYTIME) END,
                j.injuryHeight = CASE WHEN row.INJURYHGTM = 0 THEN null ELSE row.INJURYHGTM END,
                j.memo = CASE WHEN row.MEMBERMEMO = "" THEN null ELSE row.MEMBERMEMO END)
